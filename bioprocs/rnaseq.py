from pyppl import Proc, Box
from .utils import plot

"""
@name:
	pExpdir2Matrix
@description:
	Convert expression files to expression matrix
	File names will be used as sample names (colnames)
	Each gene and its expression per line.
	Suppose each expression file has the same rownames and in the same order.
@input:
	`expdir:file`:  the directory containing the expression files, could be gzipped
@output:
	`outfile:file`: the expression matrix file
	`outdir:dir`:   the directory containing expr file and plots
@args:
	`pattern` : The pattern to filter files. Default `'*'`
	`header`  : Whether each expression file contains header. Default: `False`
	`exrows`  : Rows to be excluded, regular expression applied. Default: `["^Sample", "^Composite", "^__"]`
	`boxplot` : Whether to plot a boxplot. Default: False
	`heatmap` : Whether to plot a heatmap. Default: False
	`histplot`: Whether to plot a histgram. Default: False
	`devpars` : Parameters for png. Default: `{'res': 300, 'width': 2000, 'height': 2000}`
	`boxplotggs`: The ggplot parameters for boxplot. Default: `['r:ylab("Expression")']`
		- See ggplot2 documentation.
	`heatmapggs`: The ggplot parameters for heatmap. Default: `['r:theme(axis.text.y = element_blank())']`
	`histplotggs`: The ggplot parameters for histgram. Default: `['r:labs(x = "Expression", y = "# Samples")']`	
"""
pExpdir2Matrix                     = Proc(desc = 'Merge expression files to a matrix.')
pExpdir2Matrix.input               = "expdir:file"
pExpdir2Matrix.output              = "outfile:file:{{in.expdir | fn}}/{{in.expdir | fn}}.expr.txt, outdir:dir:{{in.expdir | fn}}"
pExpdir2Matrix.lang                = "Rscript"
pExpdir2Matrix.args.pattern        = '*'
pExpdir2Matrix.args.header         = False
pExpdir2Matrix.args.exrows         = ["^Sample", "^Composite", "^__"]
pExpdir2Matrix.args.boxplot        = False
pExpdir2Matrix.args.heatmap        = False
pExpdir2Matrix.args.histplot       = False
pExpdir2Matrix.args.devpars        = Box({'res': 300, 'width': 2000, 'height': 2000})
pExpdir2Matrix.args.boxplotggs     = ['r:ylab("Expression")']
pExpdir2Matrix.args.heatmapggs     = ['r:theme(axis.text.y = element_blank())']
pExpdir2Matrix.args.histplotggs    = ['r:labs(x = "Expression", y = "# Samples")']
pExpdir2Matrix.tplenvs.plotBoxplot = plot.boxplot.r
pExpdir2Matrix.tplenvs.plotHeatmap = plot.heatmap.r
pExpdir2Matrix.tplenvs.plotHist    = plot.hist.r
pExpdir2Matrix.script              = "file:scripts/rnaseq/pExpdir2Matrix.r"

"""
@name:
	pBatchEffect
@description:
	Remove batch effect with sva-combat.
@input:
	`expr:file`:  The expression file, generated by pExpdir2Matrix
	`batch:file`: The batch file defines samples and batches.
@output:
	`outfile:file`: the expression matrix file
	`outdir:dir`:   the directory containing expr file and plots
@args:
	`tool`    : The tool used to remove batch effect. Default `'combat'`
	`boxplot` : Whether to plot a boxplot. Default: False
	`heatmap` : Whether to plot a heatmap. Default: False
	`histplot`: Whether to plot a histgram. Default: False
	`devpars` : Parameters for png. Default: `{'res': 300, 'width': 2000, 'height': 2000}`
	`boxplotggs`: The ggplot parameters for boxplot. Default: `['r:ylab("Expression")']`
		- See ggplot2 documentation.
	`heatmapggs`: The ggplot parameters for heatmap. Default: `['r:theme(axis.text.y = element_blank())']`
	`histplotggs`: The ggplot parameters for histgram. Default: `['r:labs(x = "Expression", y = "# Samples")']`	
"""
pBatchEffect                     = Proc(desc = 'Try to remove batch effect of expression data.')
pBatchEffect.input               = "expr:file, batch:file"
pBatchEffect.output              = "outfile:file:{{in.expr | fn | fn}}/{{in.expr | fn | fn}}.expr.txt, outdir:dir:{{in.expr | fn | fn}}"
pBatchEffect.args.tool           = 'combat' 
pBatchEffect.args.boxplot        = False
pBatchEffect.args.heatmap        = False
pBatchEffect.args.histplot       = False
pBatchEffect.args.devpars        = Box({'res': 300, 'width': 2000, 'height': 2000})
pBatchEffect.args.boxplotggs     = ['r:ylab("Expression")']
pBatchEffect.args.heatmapggs     = ['r:theme(axis.text.y = element_blank())']
pBatchEffect.args.histplotggs    = ['r:labs(x = "Expression", y = "# Samples")']
pBatchEffect.tplenvs.plotBoxplot = plot.boxplot.r
pBatchEffect.tplenvs.plotHeatmap = plot.heatmap.r
pBatchEffect.tplenvs.plotHist    = plot.hist.r
pBatchEffect.lang                = 'Rscript'
pBatchEffect.script              = "file:scripts/rnaseq/pBatchEffect.r"


